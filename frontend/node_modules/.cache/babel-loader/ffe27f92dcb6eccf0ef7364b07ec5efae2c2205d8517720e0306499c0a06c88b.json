{"ast":null,"code":"import React,{useContext,useReducer,useState}from'react';import{Helmet}from'react-helmet-async';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import{Store}from'../Store';import{toast}from'react-toastify';import{getError}from'../utils';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const reducer=(state,action)=>{switch(action.type){case'UPDATE_REQUEST':return{...state,loadingUpdate:true};case'UPDATE_SUCCESS':return{...state,loadingUpdate:false};case'UPDATE_FAIL':return{...state,loadingUpdate:false};default:return state;}};export default function ProfileScreen(){//const requestUrl = \"https://www.skftechnologies.com:5000\";\nconst requestUrl=process.env.REACT_APP_API_URL;const{state,dispatch:ctxDispatch}=useContext(Store);const{userInfo}=state;const[name,setName]=useState(userInfo.name);const[email,setEmail]=useState(userInfo.email);const[phone,setPhone]=useState(userInfo.phone);const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[{loadingUpdate},dispatch]=useReducer(reducer,{loadingUpdate:false});const submitHandler=async e=>{e.preventDefault();try{const{data}=await axios.put(requestUrl+'/api/users/profile',{name,email,phone,password},{headers:{Authorization:`Bearer ${userInfo.token}`}});dispatch({type:'UPDATE_SUCCESS'});ctxDispatch({type:'USER_SIGNIN',payload:data});localStorage.setItem('userInfo',JSON.stringify(data));toast.success('User updated successfully');}catch(err){dispatch({type:'FETCH_FAIL'});toast.error(getError(err));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container small-container\",children:[/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"title\",{children:\"User Profile\"})}),/*#__PURE__*/_jsx(\"h1\",{className:\"my-3\",children:\"User Profile\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{value:name,onChange:e=>setName(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"phone\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Phone Number\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",value:phone,onChange:e=>setPhone(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",onChange:e=>setPassword(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",onChange:e=>setConfirmPassword(e.target.value)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Update\"})})]})]});}","map":{"version":3,"names":["React","useContext","useReducer","useState","Helmet","Form","Button","Store","toast","getError","axios","jsx","_jsx","jsxs","_jsxs","reducer","state","action","type","loadingUpdate","ProfileScreen","requestUrl","process","env","REACT_APP_API_URL","dispatch","ctxDispatch","userInfo","name","setName","email","setEmail","phone","setPhone","password","setPassword","confirmPassword","setConfirmPassword","submitHandler","e","preventDefault","data","put","headers","Authorization","token","payload","localStorage","setItem","JSON","stringify","success","err","error","className","children","onSubmit","Group","controlId","Label","Control","value","onChange","target","required"],"sources":["C:/Users/User/Amazona/frontend/src/screens/ProfileScreen.js"],"sourcesContent":["import React, { useContext, useReducer, useState } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Store } from '../Store';\r\nimport { toast } from 'react-toastify';\r\nimport { getError } from '../utils';\r\nimport axios from 'axios';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_REQUEST':\r\n      return { ...state, loadingUpdate: true };\r\n    case 'UPDATE_SUCCESS':\r\n      return { ...state, loadingUpdate: false };\r\n    case 'UPDATE_FAIL':\r\n      return { ...state, loadingUpdate: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function ProfileScreen() {\r\n  //const requestUrl = \"https://www.skftechnologies.com:5000\";\r\n  const requestUrl = process.env.REACT_APP_API_URL;\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const { userInfo } = state;\r\n  const [name, setName] = useState(userInfo.name);\r\n  const [email, setEmail] = useState(userInfo.email);\r\n  const [phone, setPhone] = useState(userInfo.phone);\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\r\n    loadingUpdate: false,\r\n  });\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await axios.put(\r\n        requestUrl+'/api/users/profile',\r\n        {\r\n          name,\r\n          email,\r\n          phone,\r\n          password,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: 'UPDATE_SUCCESS',\r\n      });\r\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n      toast.success('User updated successfully');\r\n    } catch (err) {\r\n      dispatch({\r\n        type: 'FETCH_FAIL',\r\n      });\r\n      toast.error(getError(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container small-container\">\r\n      <Helmet>\r\n        <title>User Profile</title>\r\n      </Helmet>\r\n      <h1 className=\"my-3\">User Profile</h1>\r\n      <form onSubmit={submitHandler}>\r\n        <Form.Group className=\"mb-3\" controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"phone\">\r\n          <Form.Label>Phone Number</Form.Label>\r\n          \r\n          <Form.Control\r\n            type=\"number\" \r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <div className=\"mb-3\">\r\n          <Button type=\"submit\">Update</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
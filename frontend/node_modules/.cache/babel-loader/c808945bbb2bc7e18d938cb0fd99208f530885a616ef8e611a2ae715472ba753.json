{"ast":null,"code":"import axios from'axios';import React,{useContext,useEffect,useRef,useState}from'react';import{LoadScript,GoogleMap,StandaloneSearchBox,Marker}from'@react-google-maps/api';import{useNavigate}from'react-router-dom';import{Store}from'../Store';import Button from'react-bootstrap/Button';import{toast}from'react-toastify';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const defaultLocation={lat:45.516,lng:-73.56};const libs=['places'];export default function MapScreen(){//const requestUrl = \"https://www.skftechnologies.com:5000\";\nconst requestUrl=process.env.REACT_APP_API_URL;const{state,dispatch:ctxDispatch}=useContext(Store);const{userInfo}=state;const navigate=useNavigate();const[googleApiKey,setGoogleApiKey]=useState('');const[center,setCenter]=useState(defaultLocation);const[location,setLocation]=useState(center);const mapRef=useRef(null);const placeRef=useRef(null);const markerRef=useRef(null);const getUserCurrentLocation=()=>{if(!navigator.geolocation){alert('Geolocation os not supported by this browser');}else{navigator.geolocation.getCurrentPosition(position=>{setCenter({lat:position.coords.latitude,lng:position.coords.longitude});setLocation({lat:position.coords.latitude,lng:position.coords.longitude});});}};useEffect(()=>{const fetch=async()=>{const{data}=await axios(requestUrl+'/api/keys/google',{headers:{Authorization:`BEARER ${userInfo.token}`}});setGoogleApiKey(data.key);getUserCurrentLocation();};fetch();ctxDispatch({type:'SET_FULLBOX_ON'});},[ctxDispatch,userInfo]);const onLoad=map=>{mapRef.current=map;};const onIdle=()=>{setLocation({lat:mapRef.current.center.lat(),lng:mapRef.current.center.lng()});};const onLoadPlaces=place=>{placeRef.current=place;};const onPlacesChanged=()=>{const place=placeRef.current.getPlaces()[0].geometry.location;setCenter({lat:place.lat(),lng:place.lng()});setLocation({lat:place.lat(),lng:place.lng()});};const onMarkerLoad=marker=>{markerRef.current=marker;};const onConfirm=()=>{const places=placeRef.current.getPlaces()||[{}];ctxDispatch({type:'SAVE_SHIPPING_ADDRESS_MAP_LOCATION',payload:{lat:location.lat,lng:location.lng,address:places[0].formatted_address,name:places[0].name,vicinity:places[0].vicinity,googleAddressId:places[0].id}});toast.success('location selected successfully.');navigate('/shipping');};return/*#__PURE__*/_jsx(\"div\",{className:\"full-box\",children:/*#__PURE__*/_jsx(LoadScript,{libraries:libs,googleMapsApiKey:googleApiKey,children:/*#__PURE__*/_jsxs(GoogleMap,{id:\"smaple-map\",mapContainerStyle:{height:'100%',width:'100%'},center:center,zoom:15,onLoad:onLoad,onIdle:onIdle,children:[/*#__PURE__*/_jsx(StandaloneSearchBox,{onLoad:onLoadPlaces,onPlacesChanged:onPlacesChanged,children:/*#__PURE__*/_jsxs(\"div\",{className:\"map-input-box\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter your address\"}),/*#__PURE__*/_jsx(Button,{type:\"button\",onClick:onConfirm,children:\"Confirm\"})]})}),/*#__PURE__*/_jsx(Marker,{position:location,onLoad:onMarkerLoad})]})})});}","map":{"version":3,"names":["axios","React","useContext","useEffect","useRef","useState","LoadScript","GoogleMap","StandaloneSearchBox","Marker","useNavigate","Store","Button","toast","jsx","_jsx","jsxs","_jsxs","defaultLocation","lat","lng","libs","MapScreen","requestUrl","process","env","REACT_APP_API_URL","state","dispatch","ctxDispatch","userInfo","navigate","googleApiKey","setGoogleApiKey","center","setCenter","location","setLocation","mapRef","placeRef","markerRef","getUserCurrentLocation","navigator","geolocation","alert","getCurrentPosition","position","coords","latitude","longitude","fetch","data","headers","Authorization","token","key","type","onLoad","map","current","onIdle","onLoadPlaces","place","onPlacesChanged","getPlaces","geometry","onMarkerLoad","marker","onConfirm","places","payload","address","formatted_address","name","vicinity","googleAddressId","id","success","className","children","libraries","googleMapsApiKey","mapContainerStyle","height","width","zoom","placeholder","onClick"],"sources":["C:/Users/User/Amazona/frontend/src/screens/MapScreen.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport {\r\n  LoadScript,\r\n  GoogleMap,\r\n  StandaloneSearchBox,\r\n  Marker,\r\n} from '@react-google-maps/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Store } from '../Store';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst defaultLocation = { lat: 45.516, lng: -73.56 };\r\nconst libs = ['places'];\r\n\r\nexport default function MapScreen() {\r\n  //const requestUrl = \"https://www.skftechnologies.com:5000\";\r\n  const requestUrl = process.env.REACT_APP_API_URL;\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const { userInfo } = state;\r\n  const navigate = useNavigate();\r\n  const [googleApiKey, setGoogleApiKey] = useState('');\r\n  const [center, setCenter] = useState(defaultLocation);\r\n  const [location, setLocation] = useState(center);\r\n\r\n  const mapRef = useRef(null);\r\n  const placeRef = useRef(null);\r\n  const markerRef = useRef(null);\r\n\r\n  const getUserCurrentLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      alert('Geolocation os not supported by this browser');\r\n    } else {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        setCenter({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        });\r\n        setLocation({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        });\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      const { data } = await axios(requestUrl+'/api/keys/google', {\r\n        headers: { Authorization: `BEARER ${userInfo.token}` },\r\n      });\r\n      setGoogleApiKey(data.key);\r\n      getUserCurrentLocation();\r\n    };\r\n\r\n    fetch();\r\n    ctxDispatch({\r\n      type: 'SET_FULLBOX_ON',\r\n    });\r\n  }, [ctxDispatch,userInfo]);\r\n\r\n  const onLoad = (map) => {\r\n    mapRef.current = map;\r\n  };\r\n  const onIdle = () => {\r\n    setLocation({\r\n      lat: mapRef.current.center.lat(),\r\n      lng: mapRef.current.center.lng(),\r\n    });\r\n  };\r\n\r\n  const onLoadPlaces = (place) => {\r\n    placeRef.current = place;\r\n  };\r\n  const onPlacesChanged = () => {\r\n    const place = placeRef.current.getPlaces()[0].geometry.location;\r\n    setCenter({ lat: place.lat(), lng: place.lng() });\r\n    setLocation({ lat: place.lat(), lng: place.lng() });\r\n  };\r\n\r\n  const onMarkerLoad = (marker) => {\r\n    markerRef.current = marker;\r\n  };\r\n\r\n  const onConfirm = () => {\r\n    const places = placeRef.current.getPlaces() || [{}];\r\n    ctxDispatch({\r\n      type: 'SAVE_SHIPPING_ADDRESS_MAP_LOCATION',\r\n      payload: {\r\n        lat: location.lat,\r\n        lng: location.lng,\r\n        address: places[0].formatted_address,\r\n        name: places[0].name,\r\n        vicinity: places[0].vicinity,\r\n        googleAddressId: places[0].id,\r\n      },\r\n    });\r\n    toast.success('location selected successfully.');\r\n    navigate('/shipping');\r\n  };\r\n  return (\r\n    <div className=\"full-box\">\r\n      \r\n      <LoadScript libraries={libs} googleMapsApiKey={googleApiKey}>\r\n        <GoogleMap\r\n          id=\"smaple-map\"\r\n          mapContainerStyle={{ height: '100%', width: '100%' }}\r\n          center={center}\r\n          zoom={15}\r\n          onLoad={onLoad}\r\n          onIdle={onIdle}\r\n        >\r\n          <StandaloneSearchBox\r\n            onLoad={onLoadPlaces}\r\n            onPlacesChanged={onPlacesChanged}\r\n          >\r\n            <div className=\"map-input-box\">\r\n              <input type=\"text\" placeholder=\"Enter your address\"></input>\r\n              <Button type=\"button\" onClick={onConfirm}>\r\n                Confirm\r\n              </Button>\r\n            </div>\r\n          </StandaloneSearchBox>\r\n          <Marker position={location} onLoad={onMarkerLoad}></Marker>\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}